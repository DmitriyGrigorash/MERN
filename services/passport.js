const mongoose = require('mongoose');
const GoogleStrategy = require('passport-google-oauth20').Strategy;
const passport = require('passport');
const keys = require('../config/keys');

const UserModel = mongoose.model('users');

passport.serializeUser((user, done) => {
    /* user.id - "id" is automatically generated by MongoDB when user object was added */
    done(null, user.id);
});
passport.deserializeUser((id, done) => {
    UserModel.findById(id, (err, user) => {
        done(err, user);
    })
});

passport.use(
    new GoogleStrategy(
        {
            clientID: keys.googleClientId,
            clientSecret: keys.googleClientSecret,
            callbackURL: keys.cbURI,
        },
        function (accessToken, refreshToken, profile, cb) {
            UserModel.findOne({googleId: profile.id})
                .then(existingUser => {
                    if(existingUser) {
                    //    we already have a record with the given profile ID
                        return cb(null, existingUser);
                    } else {
                        const User = new UserModel({googleId: profile.id});
                        User.save((err, user) => {
                            if (err) {
                                console.log('#### err', err);
                            }
                            return cb(err, user);
                        })
                    }
                })
        }
));
